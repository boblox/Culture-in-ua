@using Logic.Helpers
@inherits UmbracoTemplatePage
@{
    Layout = "ContentBase.cshtml";

    // If the editor has not explicitly provided the "Page title" property page
    // then just show the name of the page otherwise show the provided title
    var pageTitle = string.IsNullOrWhiteSpace(CurrentPage.Title)
        ? CurrentPage.Name
        : CurrentPage.Title;

    // Model.Content is the current page that we're on
    // AncestorsOrSelf is all of the ancestors this page has in the tree
    // (1) means: go up to level 1 and stop looking for more ancestors when you get there
    // First() gets the first ancestor found (the home page, on level 1)
    var homePage = CurrentPage.AncestorsOrSelf(1).First();

    // Find all pages with document type alias umbNewsOverview
    // We do that using the plural, umbNewsOverviews (note the extra "s" in the end)
    // Then take the first one, as we know there will only be on news overview page
    var newsOverview = homePage.NewsOverviews.First();

    // Similar to above: find all pages with document type umbNewsItem under the news overview page
    // Then order them, first by publishDate (a property the editor can explicitly set on the news item)
    // and then by createDate, which is set by Umbraco automatically when a page gets created.
    var newsItems = newsOverview.NewsItems.OrderBy("publishDate desc, createDate desc").Take(8);

}

@section Body
{
    <article class="news-overview">
        <header>
            <h1>@pageTitle</h1>
        </header>
        <div class="row">
            @foreach (var item in newsItems)
            {
                // If the editor has not explicitly provided the "Page title" property page
                // then just show the name of the page otherwise show the provided title
                var title = string.IsNullOrWhiteSpace(item.Title)
                    ? item.Name
                    : item.Title;


                // If the editor has not explicitly set the publishDate property then show the create date
                var dateTime = item.PublishDate == default(DateTime)
                    ? item.CreateDate
                    : item.PublishDate;
                <section class="3u news-item">
                    <h3><a href="@item.Url">@title</a></h3>
                    @if (string.IsNullOrWhiteSpace(item.Image) == false)
                    {
                        <a href="@item.Url" class="image image-full">
                            <img src="@Html.GetThumbnailUrl((string)item.Image)" alt="" />
                        </a>
                    }
                    <span class="byline">
                        @Html.GetInnerText(string.IsNullOrWhiteSpace(item.SubHeader) ?
                                    (HtmlString)item.BodyText : new HtmlString(item.SubHeader), 100)
                    </span>
                    <ul class="meta">
                        <li class="timestamp">@dateTime.ToString("f")</li>
                    </ul>
                    <div>
                        <a href="@item.Url" class="button">@Umbraco.GetDictionaryValue("ContinueReadingEvents")</a>
                    </div>
                </section>
            }
        </div>
    </article>
}